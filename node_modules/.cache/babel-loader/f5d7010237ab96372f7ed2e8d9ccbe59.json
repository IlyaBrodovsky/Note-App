{"ast":null,"code":"var _jsxFileName = \"/Users/ilyabrodovsky/Documents/react_begginer /note-app/src/context/firebase/FirebaseState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from \"react\";\nimport axios from \"axios\";\nimport { FirebaseContext } from \"../firebase/firebaseContext\";\nimport { firebaseReducer } from \"../firebase/firebaseReducer\";\nimport { ADD_NOTE, FETCH_NOTES, REMOVE_NOTE, SHOW_LOADER } from \"../types.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst url = process.env.REACT_APP_DB_URL;\nexport const FirebaseState = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const initialState = {\n    notes: [],\n    loading: false\n  };\n  const [state, dispatch] = useReducer(firebaseReducer, initialState);\n\n  const showLoader = () => dispatch({\n    type: SHOW_LOADER\n  });\n\n  const fetchNotes = async () => {\n    showLoader(); // eslint-disable-next-line no-use-before-define\n\n    const payload = Object.keys(res.data).map(key => {\n      return { ...res.data[key],\n        id: key\n      };\n    });\n    dispatch({\n      type: FETCH_NOTES,\n      payload\n    });\n    const res = await axios.get(`${url}/notes.json`);\n    console.log(\"fetchNotes\", res.data);\n  };\n\n  const addNote = async title => {\n    const note = {\n      title,\n      data: new Date().toJSON()\n    };\n\n    try {\n      const res = await axios.post(`${url}/notes.json`, note);\n      const payload = { ...note,\n        id: res.data.name\n      };\n      dispatch({\n        type: ADD_NOTE,\n        payload: payload\n      });\n    } catch (e) {\n      throw new Error(e.message);\n    }\n  };\n\n  const removeNote = async id => {\n    await axios.delete(`${url}/notes/${id}.json`);\n    dispatch({\n      type: REMOVE_NOTE,\n      payload: id\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(FirebaseContext.Provider, {\n    value: {\n      showLoader,\n      addNote,\n      removeNote,\n      fetchNotes,\n      loading: state.loading,\n      notes: state.notes\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FirebaseState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = FirebaseState;\n\nvar _c;\n\n$RefreshReg$(_c, \"FirebaseState\");","map":{"version":3,"sources":["/Users/ilyabrodovsky/Documents/react_begginer /note-app/src/context/firebase/FirebaseState.js"],"names":["React","useReducer","axios","FirebaseContext","firebaseReducer","ADD_NOTE","FETCH_NOTES","REMOVE_NOTE","SHOW_LOADER","url","process","env","REACT_APP_DB_URL","FirebaseState","children","initialState","notes","loading","state","dispatch","showLoader","type","fetchNotes","payload","Object","keys","res","data","map","key","id","get","console","log","addNote","title","note","Date","toJSON","post","name","e","Error","message","removeNote","delete"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,6BAAhC;AACA,SAASC,eAAT,QAAgC,6BAAhC;AACA,SAASC,QAAT,EAAmBC,WAAnB,EAAgCC,WAAhC,EAA6CC,WAA7C,QAAgE,aAAhE;;AAEA,MAAMC,GAAG,GAAGC,OAAO,CAACC,GAAR,CAAYC,gBAAxB;AAEA,OAAO,MAAMC,aAAa,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAC7C,QAAMC,YAAY,GAAG;AACnBC,IAAAA,KAAK,EAAE,EADY;AAEnBC,IAAAA,OAAO,EAAE;AAFU,GAArB;AAKA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBlB,UAAU,CAACG,eAAD,EAAkBW,YAAlB,CAApC;;AAEA,QAAMK,UAAU,GAAG,MAAMD,QAAQ,CAAC;AAAEE,IAAAA,IAAI,EAAEb;AAAR,GAAD,CAAjC;;AAEA,QAAMc,UAAU,GAAG,YAAY;AAC7BF,IAAAA,UAAU,GADmB,CAG7B;;AACA,UAAMG,OAAO,GAAGC,MAAM,CAACC,IAAP,CAAYC,GAAG,CAACC,IAAhB,EAAsBC,GAAtB,CAA0BC,GAAG,IAAI;AAC/C,aAAO,EACL,GAAGH,GAAG,CAACC,IAAJ,CAASE,GAAT,CADE;AAELC,QAAAA,EAAE,EAAED;AAFC,OAAP;AAID,KALe,CAAhB;AAOAV,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEf,WAAR;AAAqBiB,MAAAA;AAArB,KAAD,CAAR;AAEA,UAAMG,GAAG,GAAG,MAAMxB,KAAK,CAAC6B,GAAN,CAAW,GAAEtB,GAAI,aAAjB,CAAlB;AACAuB,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BP,GAAG,CAACC,IAA9B;AACD,GAfD;;AAiBA,QAAMO,OAAO,GAAG,MAAOC,KAAP,IAAiB;AAC/B,UAAMC,IAAI,GAAG;AACXD,MAAAA,KADW;AAEXR,MAAAA,IAAI,EAAE,IAAIU,IAAJ,GAAWC,MAAX;AAFK,KAAb;;AAIA,QAAI;AACF,YAAMZ,GAAG,GAAG,MAAMxB,KAAK,CAACqC,IAAN,CAAY,GAAE9B,GAAI,aAAlB,EAAgC2B,IAAhC,CAAlB;AACA,YAAMb,OAAO,GAAG,EACd,GAAGa,IADW;AAEdN,QAAAA,EAAE,EAAEJ,GAAG,CAACC,IAAJ,CAASa;AAFC,OAAhB;AAIArB,MAAAA,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAEhB,QAAR;AAAkBkB,QAAAA,OAAO,EAAEA;AAA3B,OAAD,CAAR;AACD,KAPD,CAOE,OAAOkB,CAAP,EAAU;AACV,YAAM,IAAIC,KAAJ,CAAUD,CAAC,CAACE,OAAZ,CAAN;AACD;AACF,GAfD;;AAgBA,QAAMC,UAAU,GAAG,MAAOd,EAAP,IAAc;AAC/B,UAAM5B,KAAK,CAAC2C,MAAN,CAAc,GAAEpC,GAAI,UAASqB,EAAG,OAAhC,CAAN;AACAX,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEd,WAAR;AAAqBgB,MAAAA,OAAO,EAAEO;AAA9B,KAAD,CAAR;AACD,GAHD;;AAKA,sBACE,QAAC,eAAD,CAAiB,QAAjB;AACE,IAAA,KAAK,EAAE;AACLV,MAAAA,UADK;AAELc,MAAAA,OAFK;AAGLU,MAAAA,UAHK;AAILtB,MAAAA,UAJK;AAKLL,MAAAA,OAAO,EAAEC,KAAK,CAACD,OALV;AAMLD,MAAAA,KAAK,EAAEE,KAAK,CAACF;AANR,KADT;AAAA,cAUGF;AAVH;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CA9DM;;GAAMD,a;;KAAAA,a","sourcesContent":["import React, { useReducer } from \"react\";\nimport axios from \"axios\";\nimport { FirebaseContext } from \"../firebase/firebaseContext\";\nimport { firebaseReducer } from \"../firebase/firebaseReducer\";\nimport { ADD_NOTE, FETCH_NOTES, REMOVE_NOTE, SHOW_LOADER } from \"../types.js\";\n\nconst url = process.env.REACT_APP_DB_URL;\n\nexport const FirebaseState = ({ children }) => {\n  const initialState = {\n    notes: [],\n    loading: false,\n  };\n\n  const [state, dispatch] = useReducer(firebaseReducer, initialState);\n\n  const showLoader = () => dispatch({ type: SHOW_LOADER });\n\n  const fetchNotes = async () => {\n    showLoader();\n\n    // eslint-disable-next-line no-use-before-define\n    const payload = Object.keys(res.data).map(key => {\n      return {\n        ...res.data[key],\n        id: key,\n      };\n    });\n\n    dispatch({ type: FETCH_NOTES, payload });\n\n    const res = await axios.get(`${url}/notes.json`);\n    console.log(\"fetchNotes\", res.data);\n  };\n\n  const addNote = async (title) => {\n    const note = {\n      title,\n      data: new Date().toJSON(),\n    };\n    try {\n      const res = await axios.post(`${url}/notes.json`, note);\n      const payload = {\n        ...note,\n        id: res.data.name\n      };\n      dispatch({ type: ADD_NOTE, payload: payload });\n    } catch (e) {\n      throw new Error(e.message);\n    }\n  };\n  const removeNote = async (id) => {\n    await axios.delete(`${url}/notes/${id}.json`);\n    dispatch({ type: REMOVE_NOTE, payload: id });\n  };\n\n  return (\n    <FirebaseContext.Provider\n      value={{\n        showLoader,\n        addNote,\n        removeNote,\n        fetchNotes,\n        loading: state.loading,\n        notes: state.notes,\n      }}\n    >\n      {children}\n    </FirebaseContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}