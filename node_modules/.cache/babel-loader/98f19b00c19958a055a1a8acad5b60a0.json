{"ast":null,"code":"var _jsxFileName = \"/Users/ilyabrodovsky/Documents/react_begginer /note-app/src/context/firebase/FirebaseState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from \"react\";\nimport axios from \"axios\";\nimport { FirebaseContext } from \"./fireBaseContext\";\nimport { firebaseReducer } from \"./firebaseReducer\";\nimport { SHOW_LOADER } from \"../types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst url = process.env.REACT_APP_DB_URL;\nexport const FirebaseState = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const initialState = {\n    notes: [],\n    loading: false\n  };\n  const [state, dispatch] = useReducer(firebaseReducer, initialState);\n\n  const showLoader = () => dispatch({\n    type: SHOW_LOADER\n  });\n\n  const fetchNotes = async () => {\n    showLoader();\n    const res = await axios.get(`${url}/notes.json`);\n    console.log('fetchNotes', res.data);\n  };\n\n  const addNote = async title => {\n    const note = {\n      title,\n      data: new Date().toJSON()\n    };\n    const res = await axios.post(`${url}/notes.json`, note);\n    console.log('addNotes', res.data);\n  };\n\n  const removeNote = async id => {\n    await axios.delete(`${url}/notes/${id}.json`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(FirebaseContext.Provider, {\n    value: {},\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 10\n  }, this);\n};\n\n_s(FirebaseState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = FirebaseState;\n\nvar _c;\n\n$RefreshReg$(_c, \"FirebaseState\");","map":{"version":3,"sources":["/Users/ilyabrodovsky/Documents/react_begginer /note-app/src/context/firebase/FirebaseState.js"],"names":["React","useReducer","axios","FirebaseContext","firebaseReducer","SHOW_LOADER","url","process","env","REACT_APP_DB_URL","FirebaseState","children","initialState","notes","loading","state","dispatch","showLoader","type","fetchNotes","res","get","console","log","data","addNote","title","note","Date","toJSON","post","removeNote","id","delete"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,mBAAhC;AACA,SAASC,eAAT,QAAgC,mBAAhC;AACA,SAASC,WAAT,QAA4B,UAA5B;;AAEA,MAAMC,GAAG,GAAGC,OAAO,CAACC,GAAR,CAAYC,gBAAxB;AAEA,OAAO,MAAMC,aAAa,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAC3C,QAAMC,YAAY,GAAG;AACjBC,IAAAA,KAAK,EAAE,EADU;AAEjBC,IAAAA,OAAO,EAAE;AAFQ,GAArB;AAKA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBf,UAAU,CAACG,eAAD,EAAkBQ,YAAlB,CAApC;;AAEA,QAAMK,UAAU,GAAG,MAAMD,QAAQ,CAAC;AAACE,IAAAA,IAAI,EAAEb;AAAP,GAAD,CAAjC;;AAEA,QAAMc,UAAU,GAAG,YAAY;AAC3BF,IAAAA,UAAU;AACV,UAAMG,GAAG,GAAG,MAAMlB,KAAK,CAACmB,GAAN,CAAW,GAAEf,GAAI,aAAjB,CAAlB;AACAgB,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BH,GAAG,CAACI,IAA9B;AACH,GAJD;;AAMA,QAAMC,OAAO,GAAG,MAAMC,KAAN,IAAgB;AAC5B,UAAMC,IAAI,GAAG;AACTD,MAAAA,KADS;AACFF,MAAAA,IAAI,EAAE,IAAII,IAAJ,GAAWC,MAAX;AADJ,KAAb;AAIA,UAAMT,GAAG,GAAG,MAAMlB,KAAK,CAAC4B,IAAN,CAAY,GAAExB,GAAI,aAAlB,EAAgCqB,IAAhC,CAAlB;AAEAL,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBH,GAAG,CAACI,IAA5B;AACH,GARD;;AASA,QAAMO,UAAU,GAAG,MAAMC,EAAN,IAAY;AAC3B,UAAM9B,KAAK,CAAC+B,MAAN,CAAc,GAAE3B,GAAI,UAAS0B,EAAG,OAAhC,CAAN;AACH,GAFD;;AAIF,sBAAO,QAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAE,EAAjC;AAAA,cAGNrB;AAHM;AAAA;AAAA;AAAA;AAAA,UAAP;AAKD,CAlCM;;GAAMD,a;;KAAAA,a","sourcesContent":["import React, {useReducer} from \"react\";\nimport axios from \"axios\";\nimport { FirebaseContext } from \"./fireBaseContext\";\nimport { firebaseReducer } from \"./firebaseReducer\";\nimport { SHOW_LOADER } from \"../types\";\n\nconst url = process.env.REACT_APP_DB_URL\n\nexport const FirebaseState = ({ children }) => {\n    const initialState = {\n        notes: [],\n        loading: false\n    }\n\n    const [state, dispatch] = useReducer(firebaseReducer, initialState)\n\n    const showLoader = () => dispatch({type: SHOW_LOADER})\n\n    const fetchNotes = async () => {\n        showLoader()\n        const res = await axios.get(`${url}/notes.json`)\n        console.log('fetchNotes', res.data)\n    }\n\n    const addNote = async title  => {\n        const note = {\n            title, data: new Date().toJSON()\n\n        }\n        const res = await axios.post(`${url}/notes.json`, note)\n\n        console.log('addNotes', res.data)\n    }\n    const removeNote = async id => {\n        await axios.delete(`${url}/notes/${id}.json`)\n    }\n\n  return <FirebaseContext.Provider value={{\n\n  }}>\n  {children}\n  </FirebaseContext.Provider>;\n};\n"]},"metadata":{},"sourceType":"module"}