{"ast":null,"code":"var _jsxFileName = \"/Users/ilyabrodovsky/Documents/react_begginer /note-app/src/context/firebase/FirebaseState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from \"react\";\nimport axios from \"axios\";\nimport { FirebaseContext } from \"./fireBaseContext\";\nimport { firebaseReducer } from \"./firebaseReducer\";\nimport { REMOVE_NOTE, SHOW_LOADER } from \"../types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst url = process.env.REACT_APP_DB_URL;\nexport const FirebaseState = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const initialState = {\n    notes: [],\n    loading: false\n  };\n  const [state, dispatch] = useReducer(firebaseReducer, initialState);\n\n  const showLoader = () => dispatch({\n    type: SHOW_LOADER\n  });\n\n  const fetchNotes = async () => {\n    showLoader();\n    const res = await axios.get(`${url}/notes.json`);\n    console.log(\"fetchNotes\", res.data);\n  };\n\n  const addNote = async title => {\n    const note = {\n      title,\n      data: new Date().toJSON()\n    };\n    const res = await axios.post(`${url}/notes.json`, note);\n    console.log(\"addNotes\", res.data);\n  };\n\n  const removeNote = async id => {\n    await axios.delete(`${url}/notes/${id}.json`);\n    dispatch({\n      type: REMOVE_NOTE,\n      payload: id\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(FirebaseContext.Provider, {\n    value: {},\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FirebaseState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = FirebaseState;\n\nvar _c;\n\n$RefreshReg$(_c, \"FirebaseState\");","map":{"version":3,"sources":["/Users/ilyabrodovsky/Documents/react_begginer /note-app/src/context/firebase/FirebaseState.js"],"names":["React","useReducer","axios","FirebaseContext","firebaseReducer","REMOVE_NOTE","SHOW_LOADER","url","process","env","REACT_APP_DB_URL","FirebaseState","children","initialState","notes","loading","state","dispatch","showLoader","type","fetchNotes","res","get","console","log","data","addNote","title","note","Date","toJSON","post","removeNote","id","delete","payload"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,mBAAhC;AACA,SAASC,eAAT,QAAgC,mBAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,UAAzC;;AAEA,MAAMC,GAAG,GAAGC,OAAO,CAACC,GAAR,CAAYC,gBAAxB;AAEA,OAAO,MAAMC,aAAa,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAC7C,QAAMC,YAAY,GAAG;AACnBC,IAAAA,KAAK,EAAE,EADY;AAEnBC,IAAAA,OAAO,EAAE;AAFU,GAArB;AAKA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBhB,UAAU,CAACG,eAAD,EAAkBS,YAAlB,CAApC;;AAEA,QAAMK,UAAU,GAAG,MAAMD,QAAQ,CAAC;AAAEE,IAAAA,IAAI,EAAEb;AAAR,GAAD,CAAjC;;AAEA,QAAMc,UAAU,GAAG,YAAY;AAC7BF,IAAAA,UAAU;AACV,UAAMG,GAAG,GAAG,MAAMnB,KAAK,CAACoB,GAAN,CAAW,GAAEf,GAAI,aAAjB,CAAlB;AACAgB,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BH,GAAG,CAACI,IAA9B;AACD,GAJD;;AAMA,QAAMC,OAAO,GAAG,MAAOC,KAAP,IAAiB;AAC/B,UAAMC,IAAI,GAAG;AACXD,MAAAA,KADW;AAEXF,MAAAA,IAAI,EAAE,IAAII,IAAJ,GAAWC,MAAX;AAFK,KAAb;AAIA,UAAMT,GAAG,GAAG,MAAMnB,KAAK,CAAC6B,IAAN,CAAY,GAAExB,GAAI,aAAlB,EAAgCqB,IAAhC,CAAlB;AAEAL,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBH,GAAG,CAACI,IAA5B;AACD,GARD;;AASA,QAAMO,UAAU,GAAG,MAAOC,EAAP,IAAc;AAC/B,UAAM/B,KAAK,CAACgC,MAAN,CAAc,GAAE3B,GAAI,UAAS0B,EAAG,OAAhC,CAAN;AACAhB,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEd,WADD;AAEL8B,MAAAA,OAAO,EAAEF;AAFJ,KAAD,CAAR;AAID,GAND;;AAQA,sBACE,QAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAE,EAAjC;AAAA,cAAsCrB;AAAtC;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CApCM;;GAAMD,a;;KAAAA,a","sourcesContent":["import React, { useReducer } from \"react\";\nimport axios from \"axios\";\nimport { FirebaseContext } from \"./fireBaseContext\";\nimport { firebaseReducer } from \"./firebaseReducer\";\nimport { REMOVE_NOTE, SHOW_LOADER } from \"../types\";\n\nconst url = process.env.REACT_APP_DB_URL;\n\nexport const FirebaseState = ({ children }) => {\n  const initialState = {\n    notes: [],\n    loading: false,\n  };\n\n  const [state, dispatch] = useReducer(firebaseReducer, initialState);\n\n  const showLoader = () => dispatch({ type: SHOW_LOADER });\n\n  const fetchNotes = async () => {\n    showLoader();\n    const res = await axios.get(`${url}/notes.json`);\n    console.log(\"fetchNotes\", res.data);\n  };\n\n  const addNote = async (title) => {\n    const note = {\n      title,\n      data: new Date().toJSON(),\n    };\n    const res = await axios.post(`${url}/notes.json`, note);\n\n    console.log(\"addNotes\", res.data);\n  };\n  const removeNote = async (id) => {\n    await axios.delete(`${url}/notes/${id}.json`);\n    dispatch({\n        type: REMOVE_NOTE,\n        payload: id,\n    })\n  };\n\n  return (\n    <FirebaseContext.Provider value={{}}>{children}</FirebaseContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}